import type { TestCase } from '@types';

/**
 * Array of integration test cases for the application.
 * Each test case specifies a unique configuration for testing various scenarios.
 */
export const integrationTestCases: TestCase[] = [
  {
    id: 1,
    environment: 'development',
    withLabeling: true,
    actions: 'all',
    cleanup: 'all',
  },
  {
    id: 2,
    environment: 'development',
    withLabeling: true,
    actions: 'all',
    cleanup: 'mail',
  },
  {
    id: 3,
    environment: 'development',
    withLabeling: true,
    actions: 'all',
    cleanup: 'sheets',
  },
  {
    id: 4,
    environment: 'development',
    withLabeling: true,
    actions: 'all',
  },
  {
    id: 5,
    environment: 'development',
    withLabeling: true,
    actions: 'fio',
    cleanup: 'all',
  },
  {
    id: 6,
    environment: 'development',
    withLabeling: true,
    actions: 'fio',
    cleanup: 'mail',
  },
  {
    id: 7,
    environment: 'development',
    withLabeling: true,
    actions: 'fio',
    cleanup: 'sheets',
  },
  {
    id: 8,
    environment: 'development',
    withLabeling: true,
    actions: 'fio',
  },
  {
    id: 9,
    environment: 'development',
    withLabeling: true,
    actions: 'mail',
    cleanup: 'all',
  },
  {
    id: 10,
    environment: 'development',
    withLabeling: true,
    actions: 'mail',
    cleanup: 'mail',
  },
  {
    id: 11,
    environment: 'development',
    withLabeling: true,
    actions: 'mail',
    cleanup: 'sheets',
  },
  {
    id: 12,
    environment: 'development',
    withLabeling: true,
    actions: 'mail',
  },
  {
    id: 13,
    environment: 'development',
    withLabeling: false,
    actions: 'all',
    cleanup: 'all',
  },
  {
    id: 14,
    environment: 'development',
    withLabeling: false,
    actions: 'all',
    cleanup: 'mail',
  },
  {
    id: 15,
    environment: 'development',
    withLabeling: false,
    actions: 'all',
    cleanup: 'sheets',
  },
  {
    id: 16,
    environment: 'development',
    withLabeling: false,
    actions: 'all',
  },
  {
    id: 17,
    environment: 'development',
    withLabeling: false,
    actions: 'fio',
    cleanup: 'all',
  },
  {
    id: 18,
    environment: 'development',
    withLabeling: false,
    actions: 'fio',
    cleanup: 'mail',
  },
  {
    id: 19,
    environment: 'development',
    withLabeling: false,
    actions: 'fio',
    cleanup: 'sheets',
  },
  {
    id: 20,
    environment: 'development',
    withLabeling: false,
    actions: 'fio',
  },
  {
    id: 21,
    environment: 'development',
    withLabeling: false,
    actions: 'mail',
    cleanup: 'all',
  },
  {
    id: 22,
    environment: 'development',
    withLabeling: false,
    actions: 'mail',
    cleanup: 'mail',
  },
  {
    id: 23,
    environment: 'development',
    withLabeling: false,
    actions: 'mail',
    cleanup: 'sheets',
  },
  {
    id: 24,
    environment: 'development',
    withLabeling: false,
    actions: 'mail',
  },
  {
    id: 25,
    environment: 'development',
    withLabeling: false,
    cleanup: 'all',
  },
  {
    id: 26,
    environment: 'development',
    withLabeling: false,
    cleanup: 'mail',
  },
  {
    id: 27,
    environment: 'development',
    withLabeling: false,
    cleanup: 'sheets',
  },
  {
    id: 28,
    environment: 'development',
    withLabeling: false,
    actions: 'all',
    month: '04-2025',
  },
  {
    id: 29,
    environment: 'development',
    withLabeling: false,
    actions: 'mail',
    month: '04-2025',
  },
  {
    id: 30,
    environment: 'development',
    withLabeling: false,
    actions: 'fio',
    month: '04-2025',
  },
];
